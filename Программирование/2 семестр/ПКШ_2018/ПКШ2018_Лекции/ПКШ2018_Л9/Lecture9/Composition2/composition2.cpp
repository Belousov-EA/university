/*Обращение к функциям внутреннего объекта (в дальнейшем мы будем 
называть его подобъектом) просто требует дополнительного уточнения
имени объекта. На практике внутренние объекты чаще объявляются 
закрытыми и, таким образом, становятся частью базовой реализации 
(это означает, что при желании реализацию можно изменить). 
Функции открытого интерфейса нового класса работают с внутренним 
объектом, но не обязательно повторяют его интерфейс: 
*/
//L9:Composition2.срр 
// Закрытые внутренние объекты 
#include "..\\UsefulClass\\Useful.h"
class Y {
 int i;
 X x; // Внутренний объект 
public: 
	Y() {i = 0;}
	void f(int ii) {i = ii; x.set(ii);}
	int g() const {return i * x.read();}
 void permute() { x.permute();}
};

int main() { 
	Y y;
	y.f(47);
	y.permute();
} 
/*Функция внутреннего объекта permute() переносится в 
интерфейс композитного класса, а остальные функции 
класса X используются в функциях Y. Имеется возможность
изменить y.permute(), не изменяя x.permute()
*/

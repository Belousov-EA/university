//L8:AutoTypeConversion.срр 
// Конструктор, обеспечивающий приведение типа 
class One {
 public: One() {} 
 };
class Two {
 public: 
 Two(const One&) {} 
 };
void f(Two) {}
 
int main() {
One one;
 f(one); // Должно быть Two, передается One 
 }
/*Встречая вызов f() с объектом One, компилятор обращается
к объявлению f() и видит, что функция должна получать Two. 
Далее компилятор выясняет, можно ли как-то сделать Two из One,
находит конструктор Two::Two(0ne) и незаметно вызывает его. 
Полученный объект Two передается функции f(). 
В этом случае автоматическое приведение типа избавляет вас от 
хлопот с определением двух перегруженных версий f(). 
С другой стороны, за это приходится расплачиваться скрытым 
вызовом конструктора Two, что может быть существенно, если вы 
беспокоитесь об эффективности вызовов f(). 
*/